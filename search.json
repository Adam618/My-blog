[{"title":"java Comparable接口和toString方法","url":"http://yoursite.com/2019/05/04/java之Comparable接口的使用/","content":"<hr>\n\n<p>​                                                            <strong>1004成绩排名 (20 分)</strong></p>\n<p>读入 <em>n</em>（&gt;0）名学生的姓名、学号、成绩，分别输出成绩最高和成绩最低学生的姓名和学号。</p>\n<h3 id=\"输入格式：\"><a href=\"#输入格式：\" class=\"headerlink\" title=\"输入格式：\"></a>输入格式：</h3><p>每个测试输入包含 1 个测试用例，格式为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第 1 行：正整数 n</span><br><span class=\"line\">第 2 行：第 1 个学生的姓名 学号 成绩</span><br><span class=\"line\">第 3 行：第 2 个学生的姓名 学号 成绩</span><br><span class=\"line\">  ... ... ...</span><br><span class=\"line\">第 n+1 行：第 n 个学生的姓名 学号 成绩</span><br></pre></td></tr></table></figure>\n<p>其中<code>姓名</code>和<code>学号</code>均为不超过 10 个字符的字符串，成绩为 0 到 100 之间的一个整数，这里保证在一组测试用例中没有两个学生的成绩是相同的。</p>\n<h3 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h3><p>对每个测试用例输出 2 行，第 1 行是成绩最高学生的姓名和学号，第 2 行是成绩最低学生的姓名和学号，字符串间有 1 空格。</p>\n<h3 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br><span class=\"line\">Joe Math990112 89</span><br><span class=\"line\">Mike CS991301 100</span><br><span class=\"line\">Mary EE990830 95</span><br></pre></td></tr></table></figure>\n<h3 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mike CS991301</span><br><span class=\"line\">Joe Math990112</span><br></pre></td></tr></table></figure>\n<hr>\n<p><strong>题目解答</strong>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Collections;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 使用容器自定义排序</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> China</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span>  </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        List&lt;Student&gt; stds = <span class=\"keyword\">new</span> ArrayList&lt;Student&gt;();</span><br><span class=\"line\">        Scanner input = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> num = Integer.parseInt(input.nextLine());</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(num&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            String str = input.nextLine();</span><br><span class=\"line\">            <span class=\"comment\">//System.out.println(str);</span></span><br><span class=\"line\">            String[] temp = str.split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">            Student std = <span class=\"keyword\">new</span> Student();</span><br><span class=\"line\">            std.name = temp[<span class=\"number\">0</span>];</span><br><span class=\"line\">            std.stuId = temp[<span class=\"number\">1</span>];</span><br><span class=\"line\">            std.score = Integer.parseInt(temp[<span class=\"number\">2</span>]);</span><br><span class=\"line\">            stds.add(std);</span><br><span class=\"line\">            num--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Collections.sort(stds);</span><br><span class=\"line\">       </span><br><span class=\"line\">        System.out.println(stds.get(<span class=\"number\">0</span>).name+<span class=\"string\">\" \"</span>+stds.get(<span class=\"number\">0</span>).stuId);</span><br><span class=\"line\">        System.out.println(stds.get(stds.size()-<span class=\"number\">1</span>).name+<span class=\"string\">\" \"</span>+stds.get(stds.size()-<span class=\"number\">1</span>).stuId);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"List\"</span>+stds);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span>  <span class=\"title\">Student</span> <span class=\"keyword\">implements</span> <span class=\"title\">Comparable</span>&lt;<span class=\"title\">Student</span>&gt;</span>&#123;</span><br><span class=\"line\">    String name;</span><br><span class=\"line\">    String stuId;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> score;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"Student [name=\"</span> + name + <span class=\"string\">\", stuId=\"</span> + stuId + <span class=\"string\">\", score=\"</span> + score + <span class=\"string\">\"]\"</span>;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compareTo</span><span class=\"params\">(Student o)</span> </span>&#123;<span class=\"comment\">// Student o 为要比较的对象</span></span><br><span class=\"line\">        <span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> Double.compare(score, o.score);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> Collections.sort( )方法可以对列表中某个对象的属性进行排序，但要满足对象所属的类必须实现了Comparable接口，且对象需实现此抽象方法compareT为sort方法提供对象的比较方式（sort方法运用了mergesort算法，也就是归并排序）：</p>\n<p><strong>compareTo方法：</strong></p>\n<ul>\n<li>比较对象</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compareTo</span><span class=\"params\">(Student o)</span> </span>&#123;<span class=\"comment\">// Student o 为要比较的对象</span></span><br><span class=\"line\">       <span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">       <span class=\"keyword\">return</span> Double.compare(score, o.score); <span class=\"comment\">//静态方法</span></span><br><span class=\"line\">   &#125; <span class=\"comment\">// 返回一个整数值，若第一个参数大于第二个参数返回正数，反之返回负数，相等返回0</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>比较字符串</li>\n</ul>\n<p>​              <a href=\"http://www.runoob.com/java/java-string-compareto.html\" target=\"_blank\" rel=\"noopener\">参见</a></p>\n<hr>\n<p><strong>toString()方法</strong></p>\n<p>toString() 是java.lang.Object类的方法,Object 类的 toString 方法返回一个字符串，该字符串由类名（对象是该类的一个实例）、at 标记符“@”和此对象哈希码的无符号十六进制表示组成。换句话说，该方法返回一个字符串，它的值等于：</p>\n<p>getClass().getName() + ‘@’ + Integer.toHexString(hashCode())</p>\n<p>  返回：该对象的字符串表示形式。</p>\n<p>当输出对象时就会自动调用，结果应是一个简明但易于读懂的信息表达式。建议所有子类都重写此方法。</p>\n<p>如果用arrayList储存一些对象，最好重写此方法，规定输出的格式，从而简明的查看arrayList中储存对象的信息。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"string\">\"Student [name=\"</span> + name + <span class=\"string\">\", stuId=\"</span> + stuId + <span class=\"string\">\", score=\"</span> + score + <span class=\"string\">\"]\"</span>;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n","categories":["java"],"tags":["排序","toString方法"]},{"title":"tag","url":"http://yoursite.com/tag/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"http://yoursite.com/category/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://yoursite.com/search/index.html","content":"","categories":[],"tags":[]},{"title":"about","url":"http://yoursite.com/about/index.html","content":"","categories":[],"tags":[]}]